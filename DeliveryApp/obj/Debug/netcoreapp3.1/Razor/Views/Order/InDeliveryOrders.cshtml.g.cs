#pragma checksum "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0a58c5b8a02ae7d95246c66ce7e9a2dd99fed877"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Order_InDeliveryOrders), @"mvc.1.0.view", @"/Views/Order/InDeliveryOrders.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\_ViewImports.cshtml"
using DeliveryApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\_ViewImports.cshtml"
using DeliveryApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\_ViewImports.cshtml"
using DeliveryApp.Extensions;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0a58c5b8a02ae7d95246c66ce7e9a2dd99fed877", @"/Views/Order/InDeliveryOrders.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b039239c523156bb20d4f0ce2e0343c1f090be35", @"/Views/_ViewImports.cshtml")]
    public class Views_Order_InDeliveryOrders : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DeliveryApp.Models.ViewModels.InDeliveryOrdersViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
  
    ViewData["Title"] = "Commandes en cours de livraison";
    ViewBag.CurrentController = "Order";
    ViewBag.CurrentAction = "InDeliveryOrders";
    ViewBag.CurrentViewTitle = "Commandes en cours de livraison";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("stylesheets", async() => {
                WriteLiteral("\r\n    <link href=\'https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css\' rel=\'stylesheet\' />\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
#nullable restore
#line 14 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
 if (TempData["Message"] != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""alert alert-success alert-dismissible fade show"">
        <button type=""button"" aria-hidden=""true"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
            <i class=""nc-icon nc-simple-remove""></i>
        </button>
        <span>");
#nullable restore
#line 20 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
         Write(TempData["Message"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n    </div>\r\n");
#nullable restore
#line 22 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<h1>Commandes en cours de livraison</h1>

<div class=""row"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                <strong class=""card-title"">Data Table</strong>
            </div>
            <div class=""card-body"">
                <table id=""bootstrap-data-table-export"" class=""table table-striped table-bordered"">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Heure commande</th>
                            <th>Heure estim√©e</th>
                            <th>Livreur</th>
                            <th>Client</th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 45 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                         foreach (var order in Model.InDeliveryOrders)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 48 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                               Write(order.InDeliveryOrder.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 49 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                               Write(order.InDeliveryOrder.OrderTime.ToString("dd/MM/yyyy HH:mm"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 50 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                               Write(order.DeliveryInfo.EstimatedDeliveryTime.ToString("dd/MM/yyyy HH:mm"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>\r\n                                    ");
#nullable restore
#line 52 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                               Write(order.DeliveryMan.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 52 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                                                            Write(order.DeliveryMan.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                    <a href=\"#\" data-toggle=\"modal\"");
            BeginWriteAttribute("onclick", "\r\n                                       onclick=\"", 2145, "\"", 2512, 9);
            WriteAttributeValue("", 2195, "initMap(", 2195, 8, true);
#nullable restore
#line 54 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
WriteAttributeValue("", 2203, order.DeliveryManCurrentLocation.Long.ToString().Replace(",", "."), 2203, 67, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2270, ",", 2270, 1, true);
#nullable restore
#line 54 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
WriteAttributeValue(" ", 2271, order.DeliveryManCurrentLocation.Lat.ToString().Replace(",", "."), 2272, 66, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2338, ",", 2338, 1, true);
#nullable restore
#line 54 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
WriteAttributeValue("\r\n                                                        ", 2339, order.Client.Location.Long.ToString().Replace(",", "."), 2397, 56, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2453, ",", 2453, 1, true);
#nullable restore
#line 55 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
WriteAttributeValue(" ", 2454, order.Client.Location.Lat.ToString().Replace(",", "."), 2455, 55, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2510, ");", 2510, 2, true);
            EndWriteAttribute();
            WriteLiteral(@"
                                       data-target=""#locationModal""
                                       class=""btn btn-simple btn-info btn-icon"">
                                        <i class=""fa fa-map-marker""></i>
                                    </a>
                                </td>
                                <td>");
#nullable restore
#line 61 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                               Write(order.Client.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 61 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                                                       Write(order.Client.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 63 "C:\Users\Moez\source\repos\DeliveryApp\DeliveryApp\Views\Order\InDeliveryOrders.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
            <div class=""modal fade in"" id=""locationModal"">
                <div class=""modal-dialog modal-lg"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                            <h5 class=""modal-title"">Localisation</h5>
                        </div>
                        <div class=""modal-body"">
                            <div id=""map"" style=""height: 500px""></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js'></script>
    <script>

        function initMap(long, lat, cliLong, cliLat) {

            setTimeout(function () {
                buildMap(long, lat, cliLong, cliLat)
            }, 0);
        }

        function buildMap(long, lat, cliLong, cliLat) {
            mapboxgl.accessToken = 'pk.eyJ1IjoibW9lejk2IiwiYSI6ImNqcHpmb2dxcjA3dmk0MnAzdHJhM2d1cWMifQ.F9tAenloATlCneHfirTbLw';
            var map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v11',
                center: [long, lat],
                zoom: 14
            });

            map.addControl(new mapboxgl.NavigationControl());

            var el = document.createElement(""div"");
            el.className = ""marker"";
            el.style.backgroundImage = ""url(/assets/img/deliveryTruck48.png)"";
            el.style.width = ""48px"";
            el.style.height = ""48px"";

            var ");
                WriteLiteral(@"marker = new mapboxgl.Marker(el)
                            .setLngLat([parseFloat(long), parseFloat(lat)])
                            .addTo(map);
            

            new mapboxgl.Marker()
                .setLngLat([parseFloat(cliLong), parseFloat(cliLat)])
                .addTo(map);

            var clientCoords = [cliLong, cliLat];
            var deliveryManCoords = [long, lat];


            var coords = [deliveryManCoords, clientCoords];
            var newCoords = coords.join("";"");

            var query = ""https://api.mapbox.com/directions/v5/mapbox/driving/"" + newCoords +
                            ""?geometries=geojson&steps=true&access_token=pk.eyJ1IjoibW9lejk2IiwiYSI6ImNrOWZrM2JnNDBja28zZmp3ZDlwODc4bzcifQ.p6x9krXl1bJO4NDk0cCMuw"";

            console.log(query);

            $.ajax({
                       method: 'GET',
                       url: query
            }).done(function (data) {
                 if (map.getSource(""route"")) {
                       ");
                WriteLiteral(@" map.removeLayer(""route"");
                        map.removeSource(""route"");
                 }
                map.addLayer({
                    id: ""route"",
                    type: ""line"",
                    source: {
                    type: ""geojson"",
                    data: {
                        type: ""Feature"",
                        properties: {},
                        geometry: data.routes[0].geometry,
                    },
                },
                layout: {
                    ""line-join"": ""round"",
                    ""line-cap"": ""round"",
                },
                paint: {
                    ""line-color"": ""#1db7dd"",
                    ""line-width"": 8,
                    ""line-opacity"": 0.8,
                },
            });
            });
        }


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DeliveryApp.Models.ViewModels.InDeliveryOrdersViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
