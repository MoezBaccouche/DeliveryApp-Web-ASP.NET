@model DeliveryApp.Models.ViewModels.InDeliveryOrdersViewModel
@{
    ViewData["Title"] = "Commandes en cours de livraison";
    ViewBag.CurrentController = "Order";
    ViewBag.CurrentAction = "InDeliveryOrders";
    ViewBag.CurrentViewTitle = "Commandes en cours de livraison";
}

@section stylesheets {
    <link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />

}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <button type="button" aria-hidden="true" class="close" data-dismiss="alert" aria-label="Close">
            <i class="nc-icon nc-simple-remove"></i>
        </button>
        <span>@TempData["Message"]</span>
    </div>
}


<h1>Commandes en cours de livraison</h1>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <strong class="card-title">Data Table</strong>
            </div>
            <div class="card-body">
                <table id="bootstrap-data-table-export" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Heure commande</th>
                            <th>Heure estimée</th>
                            <th>Livreur</th>
                            <th>Client</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.InDeliveryOrders)
                        {
                            <tr>
                                <td>@order.InDeliveryOrder.Id</td>
                                <td>@order.InDeliveryOrder.OrderTime.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@order.DeliveryInfo.EstimatedDeliveryTime.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    @order.DeliveryMan.FirstName @order.DeliveryMan.LastName
                                    <a href="#" data-toggle="modal"
                                       onclick="initMap(@order.DeliveryManCurrentLocation.Long.ToString().Replace(",", "."), @order.DeliveryManCurrentLocation.Lat.ToString().Replace(",", "."),
                                                        @order.Client.Location.Long.ToString().Replace(",", "."), @order.Client.Location.Lat.ToString().Replace(",", "."));"
                                       data-target="#locationModal"
                                       class="btn btn-simple btn-info btn-icon">
                                        <i class="fa fa-map-marker"></i>
                                    </a>
                                </td>
                                <td>@order.Client.FirstName @order.Client.LastName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal fade in" id="locationModal">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h5 class="modal-title">Localisation</h5>
                        </div>
                        <div class="modal-body">
                            <div id="map" style="height: 500px"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js'></script>
    <script>

        function initMap(long, lat, cliLong, cliLat) {

            setTimeout(function () {
                buildMap(long, lat, cliLong, cliLat)
            }, 0);
        }

        function buildMap(long, lat, cliLong, cliLat) {
            mapboxgl.accessToken = 'pk.eyJ1IjoibW9lejk2IiwiYSI6ImNqcHpmb2dxcjA3dmk0MnAzdHJhM2d1cWMifQ.F9tAenloATlCneHfirTbLw';
            var map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v11',
                center: [long, lat],
                zoom: 14
            });

            map.addControl(new mapboxgl.NavigationControl());

            var el = document.createElement("div");
            el.className = "marker";
            el.style.backgroundImage = "url(/assets/img/deliveryTruck48.png)";
            el.style.width = "48px";
            el.style.height = "48px";

            var marker = new mapboxgl.Marker(el)
                            .setLngLat([parseFloat(long), parseFloat(lat)])
                            .addTo(map);
            

            new mapboxgl.Marker()
                .setLngLat([parseFloat(cliLong), parseFloat(cliLat)])
                .addTo(map);

            var clientCoords = [cliLong, cliLat];
            var deliveryManCoords = [long, lat];


            var coords = [deliveryManCoords, clientCoords];
            var newCoords = coords.join(";");

            var query = "https://api.mapbox.com/directions/v5/mapbox/driving/" + newCoords +
                            "?geometries=geojson&steps=true&access_token=pk.eyJ1IjoibW9lejk2IiwiYSI6ImNrOWZrM2JnNDBja28zZmp3ZDlwODc4bzcifQ.p6x9krXl1bJO4NDk0cCMuw";

            console.log(query);

            $.ajax({
                       method: 'GET',
                       url: query
            }).done(function (data) {
                 if (map.getSource("route")) {
                        map.removeLayer("route");
                        map.removeSource("route");
                 }
                map.addLayer({
                    id: "route",
                    type: "line",
                    source: {
                    type: "geojson",
                    data: {
                        type: "Feature",
                        properties: {},
                        geometry: data.routes[0].geometry,
                    },
                },
                layout: {
                    "line-join": "round",
                    "line-cap": "round",
                },
                paint: {
                    "line-color": "#1db7dd",
                    "line-width": 8,
                    "line-opacity": 0.8,
                },
            });
            });
        }


    </script>
}